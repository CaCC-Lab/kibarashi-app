version: '3.8'

services:
  # フロントエンド開発サーバー
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infrastructure/docker/frontend/Dockerfile
    container_name: kibarashi-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    networks:
      - kibarashi-network
    command: npm run dev

  # バックエンド開発サーバー
  backend:
    build:
      context: ./backend
      dockerfile: ../infrastructure/docker/backend/Dockerfile
    container_name: kibarashi-backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=8080
      - CORS_ORIGIN=http://localhost:3000
    env_file:
      - ./backend/.env
    networks:
      - kibarashi-network
    command: npm run dev
    depends_on:
      - redis

  # Redis（Phase 1では最小限の使用）
  redis:
    image: redis:7.2.3-alpine
    container_name: kibarashi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - kibarashi-network
    command: redis-server --appendonly yes

  # Nginx（本番環境を模擬）
  nginx:
    build:
      context: ./infrastructure/docker/nginx
      dockerfile: Dockerfile
    container_name: kibarashi-nginx
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - kibarashi-network
    depends_on:
      - frontend
      - backend
    profiles:
      - production

networks:
  kibarashi-network:
    driver: bridge

volumes:
  redis-data: